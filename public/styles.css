/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  GENERAL DEFINITIONS * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* Base styles */
:root {
	--primary-color: #2c3e50;
	--secondary-color: #3498db;
	--light-color: #ecf0f1;
	--text-color: #333;
	--background-color: #f5f5f5;
	--unknown-color: #999;
	--border-radius: 4px;
	--shadow-color: rgba(0, 0, 0, 0.1);
	--overlay-shadow-color: rgba(0, 0, 0, 0.3);
	--line-color: #ddd;
}

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html, select, button {
	font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
	font-size: 11px;
	line-height: 1.6;
	color: var(--text-color);
}

pre {
	font-family: monospace;
	font-size: 0.9rem;
}

.placeholder {
	visibility: hidden;
}

/* Buttons */
button, .btn {
	font-size: 1rem;
	font-weight: bold;
	display: inline-block;
	background-color: var(--primary-color);
	color: white;
	padding: 0.4rem 0.8rem;
	border-radius: var(--border-radius);
	border: none;
	text-decoration: none;
	transition: background-color 0.2s, color 0.2s;
	cursor: pointer;
}

button.inactive, .btn.inactive {
	background-color: var(--light-color);
	color: var(--text-color);
	font-weight: normal;
}

button:hover,.btn:hover {
	background-color: var(--secondary-color);
	color: white;
}

a:not(.btn, .no-phone-link):not(header a), a:not(.btn, .no-phone-link):not(header a):visited {
	color: var(--primary-color);
	transition: color 0.3s;
}
a:not(.btn, .no-phone-link):not(header a):hover, a:not(.btn, .no-phone-link):not(header a):focus {
	color: var(--secondary-color);
}
a.no-phone-link, a.no-phone-link:visited, a.no-phone-link:hover, a.no-phone-link:focus {
	color: inherit;
	text-decoration: inherit;
	pointer-events: none;
}

a.link-small {
	font-size: 0.83em; /* is 1rem with 1.2rem in h3 */
}

h2 {
	color: var(--primary-color);
	border-bottom: 2px solid var(--secondary-color);
	font-size: 1.5rem;
	padding-bottom: 0.4rem;
	margin-top: 0.5rem;
	margin-bottom: 1rem;
}

h3 {
	margin-bottom: 0.8rem;
	color: var(--primary-color);
	font-size: 1.2rem;
}

/* Tables */
table {
	width: 100%;
	border-collapse: collapse;
	margin-bottom: 1.2rem;
	background-color: white;
}

.table-container {
	width: 100%;
	overflow-x: auto;
	position: relative;
	border: 1px solid var(--line-color);
	border-radius: var(--border-radius);
}


.table-container thead tr, .table-container thead th {
	background-color: var(--primary-color);
}
.table-container thead th:not(:has(.th-content)) {
	padding: 0.6rem;
}


.table-container thead th .th-content {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	padding: 0.6rem; /* Add padding to inner div */
	white-space: nowrap; /* Prevent wrapping */
	overflow: hidden;
	text-overflow: ellipsis;
	color: white;
	transition: all 0.2s ease;
}

.table-container thead th:hover {
	overflow: visible;
	z-index: 11; /* Ensure it appears above other headers */
}
.table-container thead th:hover .th-content {
	visibility: visible;
	background-color: var(--primary-color);
	box-shadow: 0 2px 8px var(--overlay-shadow-color);
	border-radius: 0 0 var(--border-radius) var(--border-radius);
	height: max-content; /* Allow height to grow */
	max-height: none; /* Show full content on hover */
	min-width: 100%; /* Ensure it's at least as wide as the th */
	width: max-content;
	white-space: normal; /* Allow wrapping in expanded state */
	overflow: visible; /* Show all content */
	outline: 1px solid var(--light-color);
	pointer-events: none;
}
.table-container thead th:last-child:hover .th-content {
	left: unset;
	right: 0;
}

.table-container table {
	margin-bottom: 0;
	outline: 1px solid var(--line-color);
}


.collapsible-content>.table-container {
	margin-bottom: 0;
}

th, td {
	padding: 0.6rem;
	text-align: left;
	border-bottom: 1px solid var(--line-color);
}

.table-container tbody tr:last-child td {
    border-bottom: none;
}

th {
	background-color: var(--primary-color);
	color: white;
}

td { /* Handle long values in table cells */
	max-width: 225px;
	overflow-x: auto;
	white-space: nowrap;
	padding: 6px;
}

table.keyvalue-table td {
	max-width: calc(50vw - 29px);
}

td.unknown {
	color: var(--unknown-color);
}

tr:hover {
	background-color: var(--background-color);
}
tr:hover:not(:has(a:hover))>td:first-child>a {
	color: var(--secondary-color) !important;
}



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  PAGE LAYOUTS * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

body {
	background-color: var(--background-color);
	margin: 0;
}

body.list { /* use a flex layout taking up all available space */
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	overflow: hidden;
}

body.detail main {
	padding-top: 42px; /* Default space for fixed header, adjusted via JS */
	padding-bottom: 34px; /* Default space for fixed footer, adjusted via JS */
}

.container {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 1rem;
}

/* Header */
header {
	background-color: var(--primary-color);
	color: white;
	box-shadow: 0 2px 4px var(--shadow-color);
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: 100;
}
header > .container {
	padding: 1rem;
	display: flex;
	flex-direction: row;
	gap: 2rem 1rem;
	justify-content: space-between;
	align-items: baseline;
	flex-wrap: wrap;
}
body.list header {
	position: unset;
	flex: 0;
}

header h1 {
	margin: 0;
	padding-left: 0.5rem;
	font-size: 1.5rem;
	line-height: 1.2rem;
}
header h1 > span:nth-child(1) { /* IZ */
	position: relative;
	top: -0.19em;
	font-size: 1.5rem;
}
header h1 > span:nth-child(2) { /* AR */
	position: relative;
	top: 0.08em;
	font-size: 2.1rem;
}
header h1 > span:nth-child(3) { /* chiv */
	position: relative;
	top: 0.1em;
	text-transform: uppercase;
	font-size: 1.5rem;
}

header nav {
	margin-left: auto;
}

header nav ul {
	list-style: none;
	display: flex;
	justify-content: flex-end;
	flex-wrap: wrap;
	gap: 1rem;
}

header nav ul li {
	margin: 0;
}

header nav ul li a {
	color: white;
	text-decoration: none;
	font-weight: 500;
	transition: color 0.2s, background-color 0.2s;
	padding: 0.4rem 0.8rem;
	border-radius: var(--border-radius);
}	

header nav ul li a:hover {
	color: var(--light-color);
	background-color: rgba(255, 255, 255, 0.1);
}	

header nav ul li a.active {
	background-color: rgba(255, 255, 255, 0.2);
	color: var(--light-color);
}	

/* Main content */

main {
	padding: 1.5rem 0;
}	


body.list main {
	flex: 1 1 auto; /* Grow and shrink as needed */
	display: flex; /* Make main a flex container */
	min-height: 0; /* Critical for nested flex containers on Firefox/Safari */
	flex-direction: column; /* Stack children vertically */
	overflow: hidden; /* Prevent main from scrolling */
}	

/* Keep these elements at their natural size */
body.list h2, 
body.list .list-top-bar, 
body.list .list-bottom-bar {
	flex: 0 0 auto; /* Don't grow or shrink */
}

/* Make the table container take up all remaining space and scroll its contents */
body.list .table-container {
	flex: 1 1 auto; /* Grow and shrink as needed */
	min-height: 0; /* Critical for nested flex containers on Firefox/Safari */
	overflow: auto; /* Add scrollbars when content overflows */
}


/* Footer */
footer {
	background-color: var(--primary-color);
	color: white;
	padding: 0.75rem 0;
	text-align: center;
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: 100;
}	
body.list footer {
	position: static;
	flex: 0;
}	



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  LIST CONTENT * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

body.list h2 {
	margin-bottom: 0;
}

/* Sticky table headers with max height and hover expansion */
.list-table thead th {
	position: sticky;
	top: 0; /* Stick to the top of the container */
	z-index: 10;
	height: 2.8em; /* Fixed height for th */
	overflow: visible; /* Allow overflow for the absolute positioned content */
	padding: 0; /* Remove padding from th */
	white-space: nowrap; /* Prevent wrapping */
}

table.list-table>tbody>tr>td {
	min-width: 4rem;
}

table.list-table>tbody>tr>td.number {
	text-align: right;
}

body.list .table-container {
	margin-bottom: 0;
	box-shadow: 0 2px 4px var(--shadow-color);
}

/* Top bar */
.list-top-bar {
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin: 1rem 0;
	flex-wrap: wrap;
	gap: 0.5rem;
    min-height: 2rem;
}

.list-info {
	display: flex;
	align-items: center;
}

.control-buttons {
	display: flex;
	gap: 0.5rem;
	align-items: center;
}


/* Overlay panels */
.overlay-panel {
	position: fixed; /* Changed from absolute to fixed */
	top: 100px; /* Adjusted to account for fixed header */
	right: 1rem;
	background-color: white;
	border-radius: var(--border-radius);
	box-shadow: 0 4px 12px var(--overlay-shadow-color);
	padding: 1rem;
	z-index: 101; /* Just above header/footer z-index */
	width: 80%;
	max-width: 600px;
	display: none; /* Hidden by default */
	overflow: auto;
}

.overlay-panel.active {
	display: block;
}

.overlay-panel .panel-actions {
	display: flex;
	justify-content: flex-end;
	margin-top: 1rem;
}

.overlay-panel .panel-actions button {
	background-color: var(--secondary-color);
	color: white;
	border: none;
	padding: 0.4rem 0.8rem;
	border-radius: var(--border-radius);
	cursor: pointer;
	font-weight: bold;
	margin-left: 0.5rem;
}

.overlay-panel .panel-actions button.cancel {
	background-color: #95a5a6;
}

.overlay-panel .panel-actions button:hover {
	background-color: var(--primary-color);
}


/* Column selection panel styles */
.column-checkboxes {
	display: flex;
	flex-wrap: wrap;
	gap: 0.5rem;
	margin-bottom: 1rem;
}

.column-checkbox {
	display: flex;
	align-items: center;
	background-color: var(--light-color);
	padding: 0.3rem 0.6rem;
	border-radius: var(--border-radius);
	border: 1px solid var(--line-color);
}

.column-checkbox input[type="checkbox"] {
	margin-right: 0.4rem;
	cursor: pointer;
}

.column-checkbox label {
	cursor: pointer;
}


/* Filter panel styles */
.filter-condition {
	display: flex;
	align-items: center;
	margin-bottom: 0.6rem;
	gap: 0.5rem;
}

.filter-column, .filter-operator {
	flex: 1;
	padding: 0.4rem;
	border: 1px solid var(--line-color);
	border-radius: var(--border-radius);
}

.filter-value {
	flex: 1.5;
	padding: 0.4rem;
	border: 1px solid var(--line-color);
	border-radius: var(--border-radius);
}

.remove-filter {
	background-color: #e74c3c;
	color: white;
	border: none;
	padding: 0.3rem 0.5rem;
	border-radius: var(--border-radius);
	cursor: pointer;
}

.filter-actions {
	margin-top: 0.8rem;
}

#add-filter {
	background-color: var(--secondary-color);
	color: white;
	border: none;
	padding: 0.4rem 0.8rem;
	border-radius: var(--border-radius);
	cursor: pointer;
}

.clear-filters {
	color: #e74c3c;
	text-decoration: none;
	margin-right: auto;
}


/* Bottom info bar */
.list-bottom-bar {
	display: flex;
	justify-content: space-around;
	align-items: center;
	margin: 1rem 0;
	flex-shrink: 0;
	flex-wrap: wrap;
}

/* Limit selector for pagination */
.limit-selector {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.4rem;
	flex-wrap: nowrap;
}

.limit-selector label {
	white-space: nowrap;
}

.limit-selector select {
	padding: 0.3rem 0.5rem;
	border-radius: 0.25rem;
	border: 1px solid var(--light-color);
	background-color: var(--background-color);
	color: var(--text-color);
	cursor: pointer;
}

.limit-selector select:hover, .limit-selector select:focus {
	outline: none;
	border-color: var(--primary-color);
}

/* Pagination */
.pagination {
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 0.4rem;
	margin: 0; /* Remove margin */
}
.pagination .btn {
	min-width: 2.9rem;
	text-align: center;
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  DETAIL CONTENT * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Table container in detail page */
body.detail .table-container {
	overflow-y: visible; /* Allow content to flow naturally */
}

/* Detail page top actions */
body.detail .top-actions {
	float: right;
    margin-top: 0.2rem;
}

body.detail .top-actions .btn {
	margin-left: 0.8rem;
}

body.detail .detail-section {
	margin-bottom: 0.8rem;
	background-color: white;
	border-radius: var(--border-radius);
	box-shadow: 0 2px 4px var(--shadow-color);
	overflow: hidden;
}

.detail-section h3 {
	margin: 0;
	padding: 0.8rem;
	background-color: var(--light-color);
	border-bottom: 1px solid var(--line-color);
}

.detail-section .detail-summary {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(225px, 1fr));
	gap: 0.8rem;
	margin: 0.8rem;
}

.summary-item {
	display: flex;
	flex-direction: column;
	background-color: white;
	padding: 0.6rem;
	border-radius: var(--border-radius);
    border: solid 1px var(--line-color);
}

.summary-item:hover {
	background-color: var(--background-color);
}

.summary-item:hover a {
	color: var(--secondary-color) !important;
}

.summary-label {
	font-weight: bold;
	color: var(--primary-color);
	margin-bottom: 0.2rem;
}

.detail-section .collapsible-content {
	padding: 0.8rem;
	transition: max-height 0.3s ease, padding 0.3s ease;
}

.detail-section table {
	margin-bottom: 0;
}

.no-data {
	color: #888;
	font-style: italic;
	text-align: center;
	padding: 0.8rem;
}

.delta-info {
	margin-bottom: 0.8rem;
	font-style: italic;
	color: #666;
}

/* Collapsible sections */
.collapsible h3 {
	cursor: pointer;
	position: relative;
	padding-right: 30px; /* Space for the arrow */
}

.collapsible h3::after {
	content: '▼';
	position: absolute;
	right: 12px; /* Right padding for the arrow */
	top: 50%;
	transform: translateY(-50%);
	font-size: 0.7rem;
	transition: transform 0.2s ease;
}

.collapsible.collapsed h3::after {
	transform: translateY(-50%) rotate(-90deg);
}

.collapsible .collapsible-content {
	max-height: none; /* Prevent clipping */
	overflow: visible;
	transition: max-height 0.3s ease, padding 0.3s ease;
}

.collapsible.collapsed .collapsible-content {
	max-height: 0 !important; /* Ensure it's always 0 when collapsed */
	overflow: hidden;
	padding-top: 0 !important;
	padding-bottom: 0 !important;
}

pre.json-content {
	background-color: var(--background-color);
	padding: 0.8rem;
	overflow-x: auto;
	border-radius: var(--border-radius);
}

td.value:not(table.list-table > tbody > tr > td.value) > span {
	display: inline-block;
	min-width: min(11rem, 100%);
	text-align: right;
}


